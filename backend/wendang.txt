# 大学结伴助学系统概述文档

## 一、技术架构

### 开发环境

- JDK: 17+
- 后端依赖管理: Maven
- NodeJs: 20+
- 前端依赖管理: pnpm

### 技术选型

- 后端: SpringBoot 3.x
- 数据库: MySQL 8.0
- 缓存: Redis 6.x
- 前端: Vue.js 3 + Element Plus
- 权限管理: Spring Security + JWT
- 文件存储: 本地存储

## 二、功能概述

### 用户端

**1. 信息发布功能**

简单的信息发布与浏览功能：

- 发布学习求助信息（比如：求解高数题目、求英语口语练习伙伴）
- 发布学习资源（如复习资料、考试重点）
- 基础的信息管理（发布、修改、删除）

**2. 智能匹配功能**

基于简单规则的匹配系统：

- 根据学习科目进行匹配
- 根据时间段匹配（如：晚自习时间、周末）
- 根据地点匹配（如：图书馆、教室）
- 学习能力互补匹配（如：某科目好的同学和需要帮助的同学）

**3. 人物画像功能**

简化版的用户特征记录：

- 基础信息：姓名、班级、联系方式
- 学习特长：擅长的科目（自主选择）
- 学习需求：需要帮助的科目
- 空闲时间：可以进行学习交流的时间段

---

### 管理端功能

1. **用户管理**
   - 查看所有用户列表
   - 封禁/解封用户
   - 重置用户密码
   - 查看用户基本信息
2. **信息管理**
   - 查看所有发布的信息
   - 审核新发布的信息
   - 删除违规信息
   - 信息分类管理（学习求助、资源共享等）
3. **系统配置**
   - 科目列表管理（添加/修改可选科目）
   - 场地列表管理（添加/修改可选学习场地）
   - 时间段设置（设置可选学习时间段）
4. **数据统计**
   - 用户活跃度统计
   - 信息发布统计
   - 基础的数据报表导出

## 三、核心功能实现思路

### 1. 用户认证与授权

- 采用JWT + Redis方案
  - JWT存储用户基本信息
  - Redis存储Token，设置7天过期

### 2. 智能匹配系统

#### A. 互补匹配

适用场景：找人帮忙解决学习难题

```
匹配规则：
1. 必要条件：对方的"擅长科目"包含自己的"需要帮助的科目"
2. 加分项：
   - 时间段重合（30%）
   - 地点相近（20%）
   
最终得分 = 基础分(50分) + 时间匹配度(30分) + 地点匹配度(20分) //暂定
```

#### B. 结对匹配

适用场景：找人一起学习、讨论

```
匹配规则：
1. 必要条件：双方的"擅长科目"或"需要帮助的科目"有重叠
2. 加分项：
   - 时间段重合（40%）
   - 地点相近（30%）
   
最终得分 = 基础分(30分) + 时间匹配度(40分) + 地点匹配度(30分) //暂定
```

### 3. 人物画像构建

```
用户基础信息：
- 基本信息：姓名、班级、联系方式
- 学习信息：
  - 擅长的科目
  - 需要帮助的科目
  - 常用学习时间段
  - 常用学习地点
```

### 4. 数据统计分析

使用AOP实现用户行为日志：

- 记录用户操作类型
- 统计功能使用频率
- 生成报表数据

### 5. 文件存储实现

使用本地文件系统存储上传的文件：

```
实现方案：
1. 存储位置：项目resources目录下的static/uploads/images
2. 文件命名：使用UUID生成唯一文件名，保留原始后缀
3. 访问方式：通过静态资源映射直接访问
```